package io.openems.edge.battery.soltaro.cluster.versionc;

import org.osgi.service.metatype.annotations.AttributeDefinition;
import org.osgi.service.metatype.annotations.ObjectClassDefinition;

import io.openems.edge.battery.soltaro.ModuleType;
import io.openems.edge.common.startstop.StartStopConfig;

@ObjectClassDefinition(//
		name = "Battery Soltaro Cluster Version C", //
		description = "Implements the Soltaro multi rack battery system.")
public @interface Config {

	/**
	 * Gets the .
	 * @return String
	 */
	@AttributeDefinition(name = "Component-ID", description = "Unique ID of this Component")
	String id() default "bms0";

	/**
	 * Gets the alias.
	 * @return String
	 */
	@AttributeDefinition(name = "Alias", description = "Human-readable name of this Component; defaults to Component-ID")
	String alias() default "";

	/**
	 * Gets the enabled.
	 * @return boolean
	 */
	@AttributeDefinition(name = "Is enabled?", description = "Is this Component enabled?")
	boolean enabled() default true;

	/**
	 * Gets the startStop.
	 * @return StartStopConfig
	 */
	@AttributeDefinition(name = "Start/stop behaviour?", description = "Should this Component be forced to start or stop?")
	StartStopConfig startStop() default StartStopConfig.AUTO;

	/**
	 * Gets the modbus_id.
	 * @return String
	 */
	@AttributeDefinition(name = "Modbus-ID", description = "ID of Modbus bridge; ! Soltaro Cluster needs baudrate of 57600 !")
	String modbus_id() default "modbus0";

	/**
	 * Gets the modbusUnitId.
	 * @return int
	 */
	@AttributeDefinition(name = "Modbus Unit-ID", description = "The Unit-ID of the Modbus device.")
	int modbusUnitId() default 0;

	/**
	 * Gets the numberOfSlaves.
	 * @return int
	 */
	@AttributeDefinition(name = "Number of slaves", description = "The number of slaves in this battery rack (max. 20)", min = "1", max = "20")
	int numberOfSlaves() default 20;

	/**
	 * Gets the moduleType.
	 * @return ModuleType
	 */
	@AttributeDefinition(name = "Module type", description = "The type of modules in the rack")
	ModuleType moduleType() default ModuleType.MODULE_3_KWH;

	/**
	 * Gets the isRack1Used.
	 * @return boolean
	 */
	@AttributeDefinition(name = "Use Rack #1", description = "Is Rack #1 used?")
	boolean isRack1Used() default true;

	/**
	 * Gets the isRack2Used.
	 * @return boolean
	 */
	@AttributeDefinition(name = "Use Rack #2", description = "Is Rack #1 used?")
	boolean isRack2Used() default true;

	/**
	 * Gets the isRack3Used.
	 * @return boolean
	 */
	@AttributeDefinition(name = "Use Rack #3", description = "Is Rack #1 used?")
	boolean isRack3Used() default true;

	/**
	 * Gets the isRack4Used.
	 * @return boolean
	 */
	@AttributeDefinition(name = "Use Rack #4", description = "Is Rack #1 used?")
	boolean isRack4Used() default true;

	/**
	 * Gets the isRack5Used.
	 * @return boolean
	 */
	@AttributeDefinition(name = "Use Rack #5", description = "Is Rack #1 used?")
	boolean isRack5Used() default true;

	/**
	 * Gets the watchdog.
	 * @return int
	 */
	@AttributeDefinition(name = "Watchdog", description = "Watchdog timeout in seconds")
	int watchdog() default 90;

	/**
	 * Gets the Modbus_target.
	 * @return String
	 */
	@AttributeDefinition(name = "Modbus target filter", description = "This is auto-generated by 'Modbus-ID'.")
	String Modbus_target() default "";

	/**
	 * Gets the webconsole_configurationFactory_nameHint.
	 * @return String
	 */
	String webconsole_configurationFactory_nameHint() default "BMS Soltaro Cluster Version C [{id}]";
}